MODEL:
  BASE: "models/detections/det_yolov4x_cspdarknet.yaml"
  BACKBONE:
    out_indices: [3, 4, 5]
  NECK:
    in_channels: [320, 640, 640]
    out_channels: [320, 640, 1280]
    csp_repetition: 3
  BBOX_HEAD:
    num_classes: 1
    in_channels: [320, 640, 1280]
    anchor_generator: {
      type: 'YOLOV4AnchorGenerator',
      base_sizes: [[[30, 25], [36, 34], [36, 45]],
                   [[64, 32], [56, 56], [60, 72]],
                   [[108, 80], [152, 143], [160, 200]]],
      strides: [8, 16, 32]}
    bbox_coder: {type: 'YOLOV4BBoxCoder'}
    featmap_strides: [8, 16, 32]
    loss_cls: {
      type: 'CrossEntropyLoss',
      use_sigmoid: True,
      loss_weight: 32.0}
    loss_conf: {
      type: 'CrossEntropyLoss',
      use_sigmoid: True,
      loss_weight: 64.0}
    loss_bbox: {
      type: 'CIoULoss',
      loss_weight: 3.2}
  TEST_CFG:
    nms: {
      type: 'common_nms', 
      iou_threshold: 0.5}
    max_per_img: 300
DATA:
  BASE: "datasets/detections/det_retail_one_yolo.yaml"
  TRAIN_DATA:
    TYPE: "Concat" # "Normal" "Concat" "Repeat" "Balanced"
    FLAG: 1
    DATA_INFO: ["train/a_annotations.json", "train/b_annotations.json", "test/b_annotations.json"]
    DATA_PREFIX: ["train/a_images/", "train/b_images", "test/b_images"]
    SAMPLES_PER_DEVICE: 2
    WORKERS_PER_DEVICE: 2
  VAL_DATA:
    TYPE: "Normal"
    FLAG: 1
    DATA_INFO: ["train/a_annotations.json"]
    DATA_PREFIX: ["train/a_images/"]
    TEST_MODE: False
    SAMPLES_PER_DEVICE: 2
    WORKERS_PER_DEVICE: 2
  TEST_DATA:
    TYPE: "Concat"
    FLAG: 1
    DATA_INFO: ["test/a_annotations.json"] 
    DATA_PREFIX: ["test/a_images"] 
    TEST_MODE: True
    SAMPLES_PER_DEVICE: 2
    WORKERS_PER_DEVICE: 2
SCHEDULE:
  BASE: "schedulers/schedule_yolo.yaml"
  TOTAL_EPOCHS: 100
  OPTIMIZER:
    lr: 0.001
  LR_POLICY:
    policy: "CosineAnnealing"
    min_lr_ratio: 0.2
RUNTIME:
  BASE: "runtimes/local_runtime.yaml"
  CHECKPOINT_CONFIG:
    interval: 2
  LOG_CONFIG:
    interval: 20
    hooks: {
      TextLoggerHook: {ignore_last: False},
      TensorboardLoggerHook: {}
    }
